    <!doctype html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport"
              content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie=edge">
        <title>Document</title>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/orioncactus/pretendard/dist/web/static/pretendard.css" />

        <style>
            *{
            box-sizing: border-box;
            margin: 0;
            padding: 0;
            }

            body{
            font-size: 16px;
            font-family:'pretendard', sans-serif;
            background: #fafafa;
            }

            .main{
            display: flex;
            flex-direction: column;
            align-items: center;
            gap:2rem;
            }

            .title_container{
            text-align: center;
            }

            #title{
            font-size: 3rem;
            font-weight: bold;
            padding : 0.5rem;
            }

            #notice img {
            height: 1em;
            vertical-align: middle;
            position: relative;
            top: -0.1rem;
            }

            .popup{
            display: none;
            position: fixed;
            z-index: 1000;
            right:2rem;
            top:2.3rem;
            }

            .popup_content {
            background: #fff;
            border-radius: 10px;
            padding: 0.7rem;
            box-shadow: 0 0 8px rgba(0,0,0,0.2);
            text-align: left;
            }

            #close {
            float: right;
            font-size: 1rem;
            cursor: pointer;
            }

            .sample_container{
            border: 1px solid black;
            width:80%;
            padding:1rem;
            background:white;
            }

            .sample_grid{
            display: grid;
            padding:2rem;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap:1rem;
            margin: -1rem 0rem;
            }

            .sample_item{
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
            }

            .sample_img{
            width: 60%;
            height: 150px;
            }

            .sample_label{
            display:inline-block;
            padding:0.2rem 0.5rem;
            border: 1px solid black;
            border-radius:10px;
            font-size: 1rem;
            margin-top: 1rem;
            }

            .good{
            background-color: black;
            color:white;
            }

            .upload_container{
            width:80%;
            }

            .upload_box{
            display: flex;
            flex-direction: column;
            align-items: center;
            border:1px dashed black;
            text-align:center;
            padding:1.5rem 0rem;
            margin-top: 1rem;
            background:white;
            }

            #upload_button,#reselect_button{
            border-radius: 10px;
            font-weight: bold;
            font-size: 1rem;
            padding:0.5rem 2rem;
            cursor: pointer;
            }

            #upload_button:hover,#reselect_button:hover{
            color:white;
            background-color:black;
            }

            #preview_img{
            display:block;
            width:300px;
            height:150px;
            object-fit: cover;
            margin-bottom:1rem;
            }


            #distinction_label{
            font-size: 1rem;
            margin-top:-1rem;
            }

            #result_label{
            display:none;
            font-size: 1rem;
            margin-top:-1rem;
            }


            #start_button,#result_button{
            display: none;
            border-radius: 10px;
            border:none;
            font-weight: bold;
            font-size: 1.5rem;
            padding:0.5rem 3rem;
            cursor: pointer;
            background-color: black;
            color:white;
            margin-top: -1.5rem;
<!--            margin-bottom: 1rem;-->
            }

            #start_button:hover,#result_button:hover{
            background-color: #43564A;
            }

            .analyze_container{
            display: none;
            flex-direction: column;
            align-items: center;
            width:80%;
            border: 1px dashed black;
            background:white;
            }

            .analyze_process{
            display: flex;
            justify-content:space-between;
            align-items:center;
            margin-bottom:1rem;
            width:100%;
            padding:0 4rem;
            }

            .analyze_process h2{
            width:10rem;
            }

            .analyze_info{
            display: flex;
            align-items: center;
            }

            progress{
            width:25rem;
            height:0.7rem;
            -webkit-appearance: none;
            appearance: none;
            }

            progress::-webkit-progress-bar{
            background-color:white;
            border-radius:5px;
            }

            progress::-webkit-progress-value{
            background-color:green;
            border-radius:5px;
            }

            .progress_checkmark{
            width:1.5rem;
            height:1.5rem;
            vertical-align: middle;
            position: relative;
            margin-left:1rem;
            }

            /* 체크마크 기본 상태 */
            .progress_checkmark path {
            stroke: green;
            stroke-width: 40;
            stroke-dasharray: 1415;   /* 선 전체 길이 */
            stroke-dashoffset: 1415; /* 시작할 때는 다 숨김 */
            fill: green;
            fill-opacity: 0;
            transition: fill-opacity 0.5s ease-in-out;
            }

            /* 애니메이션 실행 */
            .progress_checkmark.animate path {
            animation: drawCheck 1.5s forwards ease-in-out;
            }

            .progress_checkmark.fill path{
            fill-opacity: 1;
            }

            @keyframes drawCheck {
              from {
                stroke-dashoffset: 1415; /* 처음엔 안 보임 */
              }
              to {
                stroke-dashoffset: 0; /* 전부 다 그려짐 */
              }
            }

            /* 기존 .analyze_process 그대로 두고 */

            @media (max-width: 768px) {
              .analyze_process {
                flex-direction: column;       /* 세로 배치 */
                align-items: flex-start;      /* 왼쪽 정렬 */
                padding: 0 1rem;              /* 좌우 여백 축소 */
              }

              .analyze_info {
                margin-bottom: 0.5rem;        /* 라벨과 바 간격 */
              }

              .progress_mark {
                width: 100%;                  /* 꽉 채우기 */
                display: flex;
                align-items: center;
                gap: 0.5rem;                  /* 바와 체크 사이 간격 */
              }

              progress {
                flex: 1;                      /* 바가 가변적으로 차지 */
                width: auto;                  /* 고정폭 해제 */
              }

              .progress_checkmark {
                flex-shrink: 0;               /* 크기 줄어들지 않게 */
              }
            }



        </style>
    </head>
    <body>
    <input type="hidden" name="_csrf" value="{{_csrf.token}}">
        <div class="main">
            <div class="title_container">
                <p id="title">순환 골재 품질 분석</p>

                <p id="notice">R-CNN,PCA,OpenCV를 활용하여 순환골재 내 불순물을 검출하고,
                    품질 기준에 적합한지 여부를 판정합니다 <img src="/img/notice_icon.png" alt="알림" id="notice_icon" style="cursor:pointer;"></p>

                <div id="popup" class="popup">
                    <div class="popup_content">
                        <span id="close">&times;</span>
                        <p>품질 기준 및 규정</p>
                        <p style="font-size:0.7rem">순환 골재의 유기 이물질 함유량은 골재속에 포함된 비닐,플라스틱,목재 등의 함유량이
                         총 골재 용적의 1.0% 이하이어야 한다.<br>기준:KS F 2576(순환 골재의 이물질 함유량 시험방법)</p>
                    </div>
                </div>
            </div>
            <div class="sample_container">
                <h2>샘플 이미지 예시</h2>
                <div class="sample_grid">
                    <div class="sample_item">
                        <img src="/img/good_sample.png" alt="좋은 예시1" class="sample_img">
                        <div class="sample_label good">좋은 예시</div>
                    </div>
                    <div class="sample_item">
                        <img src="/img/good_sample2.png" alt="좋은 예시2" class="sample_img">
                        <div class="sample_label good">좋은 예시</div>
                    </div>
                    <div class="sample_item">
                        <img src="/img/bad_sample.png" alt="나쁜 예시" class="sample_img">
                        <div class="sample_label bad">나쁜 예시</div>
                    </div>
                </div>
            </div>

            <div class="upload_container">
                <div class="upload_title">
                    <h2>이미지 업로드</h2>
                    <p style="padding-top:0.5rem;">순환 골재 이미지를 업로드하여 불순물 분석을 시작하세요</p>
                </div>

                <div class="upload_box">
                    <div id="upload_ui">
                        <h2>이미지를 찾아서 업로드 하세요</h2>
                        <p style="margin-bottom:1rem;">파일은 JPEG, JPG, PNG 또는 WebP 형식이어야 하며 최대 용량은 40MB입니다</p>
                        <input type="file" id="file_input" accept="image/jpeg,image/jpg,image/png,image/webp" style="display:none;">
                        <button id="upload_button">파일 선택</button>
                    </div>
                    <div id="preview_ui" style="display:none">
                        <img id="preview_img" src="" alt="미리보기">
                        <button id="reselect_button">다시 선택</button>
                    </div>
                </div>
            </div>
                <div id="distinction_label"></div>
                <button id="start_button">분석 시작</button>

            <div class="analyze_container">
                <h2 style="text-align:center; margin:1rem;">분석 진행</h2>
                <div class="analyze_process">
                    <div class="analyze_info">
                        <h2>이미지 전처리</h2>
                        <p>이미지 품질 향상 및 노이즈 제거</p>
                    </div>
                    <div class="progress_mark">
                        <progress class="progress_bar"  id="progress_bar1" value="0" max="100"></progress>
                        <svg class="progress_checkmark" id="progress_check1"    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 640">
                            <!--!Font Awesome Free v7.0.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.-->
                            <path fill="none" d="M530.8 134.1C545.1 144.5 548.3 164.5 537.9 178.8
                            L281.9 530.8C276.4 538.4 267.9 543.1 258.5 543.9
                            C249.1 544.7 240 541.2 233.4 534.6L105.4 406.6
                            C92.9 394.1 92.9 373.8 105.4 361.3
                            C117.9 348.8 138.2 348.8 150.7 361.3
                            L252.2 462.8L486.2 141.1C496.6 126.8 516.6 123.6 530.9 134z"/>
                        </svg>
                    </div>
                </div>
                <div class="analyze_process">
                    <div class="analyze_info">
                        <h2>객체 검출</h2>
                        <p>머신러닝 및 딥러닝 모델을 통한 불순물 검출</p>
                    </div>
                    <div class="progress_mark">
                        <progress class="progress_bar"  id="progress_bar2" value="0" max="100"></progress>
                        <svg class="progress_checkmark" id="progress_check2"    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 640">
                            <!--!Font Awesome Free v7.0.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.-->
                            <path fill="none" d="M530.8 134.1C545.1 144.5 548.3 164.5 537.9 178.8
                            L281.9 530.8C276.4 538.4 267.9 543.1 258.5 543.9
                            C249.1 544.7 240 541.2 233.4 534.6L105.4 406.6
                            C92.9 394.1 92.9 373.8 105.4 361.3
                            C117.9 348.8 138.2 348.8 150.7 361.3
                            L252.2 462.8L486.2 141.1C496.6 126.8 516.6 123.6 530.9 134z"/>
                        </svg>
                    </div>
                </div>
                <div class="analyze_process">
                    <div class="analyze_info">
                        <h2>불순물 분류</h2>
                        <p>검출된 객체의 종류 및 분류</p>
                    </div>
                    <div class="progress_mark">
                        <progress class="progress_bar"  id="progress_bar3" value="0" max="100"></progress>
                        <svg class="progress_checkmark" id="progress_check3"    xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 640">
                            <!--!Font Awesome Free v7.0.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.-->
                            <path fill="none" d="M530.8 134.1C545.1 144.5 548.3 164.5 537.9 178.8
                            L281.9 530.8C276.4 538.4 267.9 543.1 258.5 543.9
                            C249.1 544.7 240 541.2 233.4 534.6L105.4 406.6
                            C92.9 394.1 92.9 373.8 105.4 361.3
                            C117.9 348.8 138.2 348.8 150.7 361.3
                            L252.2 462.8L486.2 141.1C496.6 126.8 516.6 123.6 530.9 134z"/>
                        </svg>
                    </div>
                </div>
            </div>
            <div id="result_label">분석이 완료되었습니다. 분석결과를 확인해주세요.</div>
            <button id="result_button">분석 결과</button>

        </div>
    <script>
        const popup = document.getElementById('popup');
        const popup_btn = document.getElementById('notice_icon');
        const close_btn = document.getElementById('close');

        popup_btn.addEventListener('click', () => {
        popup.style.display = 'block';
        });
        close_btn.addEventListener('click', () => {
        popup.style.display = 'none';
        });


        const fileInput = document.getElementById('file_input');
        const uploadButton = document.getElementById('upload_button');
        const uploadUI = document.getElementById('upload_ui');
        const previewUI = document.getElementById('preview_ui');
        const previewImg = document.getElementById('preview_img');
        const reselectButton = document.getElementById('reselect_button');
        const distinctionLabel = document.getElementById('distinction_label');
        const analyzeStart = document.getElementById('start_button');

        uploadButton.addEventListener('click', () => {
            fileInput.click();
        });

        fileInput.addEventListener('change', () => {
        if (fileInput.files.length > 0 ) {
        const file = fileInput.files[0];

        const validExtensions = ['jpeg', 'jpg', 'png','webp'];
        const fileExt=file.name.split('.').pop().toLowerCase();
        const maxSize=40*1024*1024;

        if(!validExtensions.includes(fileExt)){
        distinctionLabel.innerText='지원되지 않는 파일 형식입니다. 다른 파일을 선택해주세요.';
        distinctionLabel.style.color = 'red';
        }else if(file.size > maxSize){
        distinctionLabel.innerText='파일 용량이 40MB를 초과했습니다. 다른 파일을 선택해주세요.';
        distinctionLabel.style.color = 'red';
        }else{
        distinctionLabel.innerText='이미지가 분석 요구사항을 만족합니다. 분석을 시작할 수 있습니다';
        distinctionLabel.style.color = 'green';
        analyzeStart.style.display = 'block';
        }


        uploadUI.style.display = 'none';
        previewUI.style.display = 'block';

        const reader = new FileReader();
        reader.onload = function(e) {
        previewImg.src = e.target.result;
        }
        reader.readAsDataURL(file);
        }
        });

        reselectButton.addEventListener('click', () => {
        fileInput.value = '';
        previewImg.src = '';
        previewUI.style.display = 'none';
        uploadUI.style.display = 'block';
        distinctionLabel.innerText='';
        analyzeStart.style.display = 'none';

        fileInput.click();
        });

        const analyzeContainer = document.querySelector('.analyze_container');
        const progressBars = [
        {bar:document.getElementById('progress_bar1'),check:document.getElementById('progress_check1')},
        {bar:document.getElementById('progress_bar2'),check:document.getElementById('progress_check2')},
        {bar:document.getElementById('progress_bar3'),check:document.getElementById('progress_check3')},
        ];
        const resultLabel = document.getElementById('result_label');
        const resultButton = document.getElementById('result_button');
        const csrfToken = document.querySelector('input[name="_csrf"]').value;


         function runProgress(index) {
                if (index >= progressBars.length){
                resultLabel.style.display='block';
                resultButton.style.display = 'block';
                resultButton.scrollIntoView({behavior: 'smooth', block: 'end'});
                return; // 끝
                }

                const {bar, check} = progressBars[index];
                bar.value = 0;
                let progress = 0;
                const duration = 2000; // 2초
                const intervalTime = 20;
                const step = 100 / (duration / intervalTime);

                const interval = setInterval(() => {
                    progress += step;
                    if (progress >= 100) {
                        progress = 100;
                        clearInterval(interval);
                        check.classList.add('animate');
                        setTimeout(() => {
                            check.classList.add('fill');
                            runProgress(index + 1); // 다음 프로그레스바 실행
                        }, 1200); // 체크 애니메이션 끝나고 다음 진행
                    }
                    bar.value = progress;
                }, intervalTime);
            }


        analyzeStart.addEventListener('click', async() =>{
            if (fileInput.files.length === 0) return;

            analyzeStart.style.display = 'none';
            reselectButton.style.display = 'none';
            distinctionLabel.style.display = 'none';

            const file = fileInput.files[0];
            const formData = new FormData();
            formData.append('image', file);

            try{
                const res = await fetch('/api/images/upload',{
                    method: 'POST',
                    headers: { 'X-CSRF-TOKEN':csrfToken
                    },
                    body: formData
                });
                data = await res.json();
                console.log("업로드 완료, DB ID:",data.id);

                analyzeContainer.style.display = 'flex';
                analyzeContainer.scrollIntoView({behavior: 'smooth', block: 'end'});

                runProgress(0);
            } catch (err){
                console.error(err);
                alert('이미지 업로드 실패! 서버 확인 필요');
                }
        });

        resultButton.addEventListener('click', () => {
            const origImageId = data.id;
            window.location.href = `/result`;
        });

    </script>
    </body>
    </html>