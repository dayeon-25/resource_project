<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Main Page</title>
    <link rel="stylesheet" href="/css/common.css">


<style>
body {
    background-image: url('/images/임시 배경화면.jpg');
    background-size: 120%;
    background-position: center;
    background-repeat: no-repeat;
    transition: background-size 3s cubic-bezier(0.77,0,0.175,1);
}

body.bg-zoom {
    background-size: 110%;
}

.main-container {
    min-height: 100vh;
    display: flex;
    align-items: center;
    padding: 0 200px;
    }

.main-content {
    max-width: 1800px;
    width: 100%;
    }

.main-title {
    font-size: 40px;
    font-weight: 400;
    line-height: 1.3;
    color: #E1D8CF;
    margin-bottom: 40px;
    }

.main-title strong {
    color: #E1D8CF;
    font-weight: 800;
    font-family: 'Geologica', sans-serif;
    letter-spacing: -0.0375em;
}

.stat-divider {
    width: 1px;
    height: 60px;
    background: #E1D8CF;
    opacity: 0.5;
    margin-right: 50px;
    margin-left: 25px;
    margin-top: 20px;
    }

.stats-section {
    margin-bottom: 60px;
}

.stats-container {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    gap: 0;
}

.stat-item {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.stat-label {
    font-size: 15px;
    font-weight: 500;
    color: #E1D8CF;
}

.stat-value {
    display: flex;
    align-items: baseline;
    gap: 15px;
}

.stat-number {
    font-size: 38px;
    font-weight: 700;
    font-family: var(--engFont);
    color: #E1D8CF;
    line-height: 1;
    min-width: 100px;
    font-variant-numeric: tabular-nums;
     text-align: right;
}

.stat-unit {
    font-size: 15px;
    font-weight: 400;
    color: #E1D8CF;
}

.stats-text {
    font-size: 11px;
    color: #E1D8CF;
    opacity: 0.7;
    margin-top: 5px;
}

.button-section {
    display: flex;
    gap: 20px;
    margin-top: 30px;
}

.btn-about, .btn-analyze {
    padding: 8px 13px;
    font-size: 13px;
    font-weight: 600;
    border-radius: 5px;
    cursor: pointer;
}

.btn-about {
    background:  #E1D8CF;
    color: #3D4F4C;
    border: none;
}

.btn-about:hover {
    background: rgba(255, 255, 255, 0.95);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.25);
}

.btn-analyze {
    background: transparent;
    color:  #E1D8CF;
    border: 1px solid  #E1D8CF;
}

.btn-analyze:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color:  #E1D8CF;

}

    </style>
</head>
<body>
{{> layout/header}}


<div class="main-container">
    <div class="main-content">
        <h2 class="main-title">
            <span>우리는</span>
            <br>
            <span>
				<strong>순환 골재 불순물 검출 SOLUTION</strong>
				으로
            </span>
            <br>
            <span>
                <strong>탄소 중립</strong>
                을 실현합니다.
            </span>
        </h2>


    <div class="stats-container">
        <div class="stat-item">
            <p class="stat-label"> 탄소 저감량 </p>
            <div class="stat-value">
                <div class="stat-number" id="carbon-count"> 6,708 </div>
                <span class="stat-unit">만 KgCO2e</span>
            </div>
        </div>

        <div class="stat-divider"></div>

        <div class="stat-item">
            <p class="stat-label"> 비용 절감량 </p>
            <div class="stat-value">
                <span class="stat-number" id="cost-count"> 4,758 </span>
                <span class="stat-unit">억 원</span>
            </div>
        </div>
    </div>

    <p class="stats-text"> 총 순환골재 사용량 기준</p>

   <div class="button-section">
       <button class="btn-about" onclick="location.href='/about'"> 더 알아보기 </button>
       <button class="btn-analyze" onclick="location.href='/analyze'"> 품질 검사 </button>
   </div>
    </div>
</div>

<!--홈페이지 JS-->
<script>
    window.addEventListener('DOMContentLoaded', () => {
        setTimeout(() => {
            document.body.classList.add('bg-zoom');
        }, 200);
    });


    // 숫자 카운트 업
    function animateCountUp(element, endValue, duration = 2000) {
        let startValue = 0;
        let startTime = null;

        function step(currentTime) {
            if (!startTime) startTime = currentTime;
            const progress = Math.min((currentTime - startTime) / duration, 1);
            const value = Math.floor(progress * (endValue - startValue) + startValue);
            element.textContent = value.toLocaleString();
            if (progress < 1) {
                requestAnimationFrame(step);
            } else {
                element.textContent = endValue.toLocaleString();
            }
        }
        requestAnimationFrame(step);
    }

    window.addEventListener('DOMContentLoaded', () => {
    animateCountUp(document.getElementById('carbon-count'), 6708, 3000);
    animateCountUp(document.getElementById('cost-count'), 4758, 3000);
});


</script>

</body>
</html>

